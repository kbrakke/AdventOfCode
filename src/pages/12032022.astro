---
import Layout from '../layouts/Layout.astro';
import { readFile } from '../components/inputReader';
import { intersection } from 'lodash';
const charToInt = {
    'a' : 1,
    'b' : 2,
    'c' : 3,
    'd' : 4,
    'e' : 5,
    'f' : 6,
    'g' : 7,
    'h' : 8,
    'i' : 9,
    'j' : 10,
    'k' : 11,
    'l' : 12,
    'm' : 13,
    'n' : 14,
    'o' : 15,
    'p' : 16,
    'q' : 17,
    'r' : 18,
    's' : 19,
    't' : 20,
    'u' : 21,
    'v' : 22,
    'w' : 23,
    'x' : 24,
    'y' : 25,
    'z' : 26,
    'A' : 27,
    'B' : 28,
    'C' : 29,
    'D' : 30,
    'E' : 31,
    'F' : 32,
    'G' : 33,
    'H' : 34,
    'I' : 35,
    'J' : 36,
    'K' : 37,
    'L' : 38,
    'M' : 39,
    'N' : 40,
    'O' : 41,
    'P' : 42,
    'Q' : 43,
    'R' : 44,
    'S' : 45,
    'T' : 46,
    'U' : 47,
    'V' : 48,
    'W' : 49,
    'X' : 50,
    'Y' : 51,
    'Z' : 52,
}

const data: string = await readFile('12032022-input.txt');
const packList: string[] = data.split('\n');
const commonItems: string[] = packList.map(pack => {
    const left: string = pack.slice(0, pack.length/2);
    const right: string = pack.slice(pack.length/2);
    return intersection(Array.from(left), Array.from(right))[0];
});
const itemsToValue: number[] = commonItems.map(item => {
    return charToInt[item];
});
const totalCommonValue = itemsToValue.reduce((a, b) => a + b, 0);
let badgeValue = 0;
for(let i = 0; i<packList.length; i+=3) {
    badgeValue += charToInt[
        intersection(
            Array.from(packList[i]),
            Array.from(packList[i+1]),
            Array.from(packList[i+2]))[0]
        ]
}

---
<Layout title="Day 3">
    <main>
      <div class="fade-in-text ">
        <h1>--- Day 3: Rucksack Reorganization ---</h1>
        <h2>Step 1: Parsing Input</h2>
        <p>Reading the list of Packs, using '\n' as a seperator.</p>
        <button type="button" class="collapsible">Here is the list of Rucksacks</button>
        <div class="content">
          <ul class="grid" >
            {packList.map(pack => (
              <li>{pack}</li>
            ))}
          </ul>
        </div>
        <h2>Step 2: Finding the common item</h2>
        <p>Map each Rucksack to a single letter doing a map -> split -> union</p>
        <button type="button" class="collapsible">Mapping the list of outcomes</button>
        <div class="content">
          <ul class="grid" >
            {commonItems.map(common => (
                <li>{common}</li>
            ))}
          </ul>
        </div>
        <p>The Relative Lengths of things</p>
        <h2>Step 3: Converting each value to a number and summing it up</h2>
        <p>Using the char -> number dictionary we just map reduce</p>
        <button type="button" class="collapsible">Final Value</button>
        <div class="content">
          <ul class="grid" >
            {totalCommonValue}
          </ul>
        </div>
        <h2>Step 4: finding the common in every 3 bags</h2>
        <p>Using a simple for loop jumping index by 3</p>
        <button type="button" class="collapsible">Badge Value</button>
        <div class="content">
          <ul class="grid" >
            {badgeValue}
          </ul>
        </div>
      </div>
    </main>
    <script>
      var coll = document.getElementsByClassName("collapsible");
      var i;
  
      for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function() {
          this.classList.toggle("active");
          var content = this.nextElementSibling;
          if (content.style.display === "block") {
            content.style.display = "none";
          } else {
            content.style.display = "block";
          }
        });
      }
    </script>
  </Layout>
  
  <style>
  .fade-in-text {
    font-family: 'Courier New', Courier, monospace;
    font-size: 12px;
    animation: fadeIn 5s;
    -webkit-animation: fadeIn 5s;
    -moz-animation: fadeIn 5s;
    -o-animation: fadeIn 5s;
    -ms-animation: fadeIn 5s;
  }
  @keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }
  
  ul {
    list-style-type: none; /* Remove bullets */
    padding: 0; /* Remove padding */
    margin: 0; /* Remove margins */
  }
  
  ul li {
    border: 1px solid #ddd; /* Add a thin border to each list item */
    margin-top: -1px; /* Prevent double borders */
    background-color: #f6f6f6; /* Add a grey background color */
    padding: 12px; /* Add some padding */
  }
  .collapsible {
    font-family: 'Courier New', Courier, monospace;
    background-color: #eee;
    color: #444;
    cursor: pointer;
    padding: 18px;
    width: 100%;
    border: none;
    text-align: left;
    outline: none;
    font-size: 15px;
  }
  
  /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
  .active, .collapsible:hover {
    background-color: #ccc;
  }
  
  /* Style the collapsible content. Note: hidden by default */
  .content {
    font-family: 'Courier New', Courier, monospace;
    padding: 0 18px;
    display: none;
    overflow: hidden;
    background-color: #f1f1f1;
  }
  </style>